{"version":3,"sources":["component/ui/FilterSort.module.css","reducer/authReducer.js","action/type.js","reducer/errorReducer.js","reducer/backendDataReducer.js","reducer/index.js","component/nav/Nav.js","middleware/middleware.js","action/action.js","component/signup/Signup.js","component/dashboard/Dashboard.js","component/login/Login.js","component/products/ProductDetail.js","component/ui/FilterSort.js","component/products/Products.js","component/main/Main.js","component/PrivateRoute.js","component/findpassword/FindPassword.js","component/resetPassword/ResetPassword.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","isEmpty","require","initialState","isAuthenticated","user","authReducer","state","action","type","payload","message","hasError","errorReducer","backendData","backendDataReducer","rootReducer","combineReducers","auth","error","Nav","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","getBackendData","result","connect","withRouter","props","useState","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","setError","newUser","useEffect","getErrorMessage","errors","to","length","map","err","index","key","msg","onSubmit","e","userInfo","history","preventDefault","dispatch","post","then","push","console","log","catch","response","data","htmlFor","id","value","onChange","target","userName","onClick","localStorage","removeItem","currentUser","setItem","jwt","decode","loginUser","href","ProductDetail","productDetail","setProductDetail","get","match","params","prodId","product","prod","_id","src","image","style","height","width","price","FilterSort","show","setShow","handleClose","selectGender","checkHandler","icon","Modal","onHide","className","classes","Header","Title","Button","variant","Body","container","List","ListItem","checked","Label","Footer","ApplyButton","Products","products","setProducts","alt","Main","rest","render","path","from","location","verifiedEmail","retrievePassword","verifiedPassword","passwordToken","library","add","faFilter","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","App","component","Signup","Login","exact","Dashboard","FindPassword","ResetPassword","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6MACAA,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,OAAS,2BAA2B,MAAQ,0BAA0B,OAAS,2BAA2B,YAAc,gCAAgC,KAAO,yBAAyB,SAAW,6BAA6B,MAAQ,4B,+XCAtRC,EAAUC,EAAQ,KAElBC,EAAe,CACjBC,iBAAiB,EACjBC,KAAM,IA6BKC,EA1BK,WAAmC,IAAlCC,EAAiC,uDAAzBJ,EAAcK,EAAW,uCAClD,OAAQA,EAAOC,MACX,ICVwB,mBDWpB,OAAO,2BACAF,GADP,IAEIH,iBAAkBH,EAAQO,EAAOE,SACjCL,KAAMG,EAAOE,UAErB,ICZyB,oBDkBzB,ICjBsB,iBDkBlB,OAAO,2BACAH,GADP,IAEIH,iBAAiB,EACjBC,KAAMG,EAAOE,UAErB,QACI,OAAOH,IE3BbJ,EAAe,CACjBQ,QAAS,KACTC,UAAU,GAsBCC,EAnBM,WAAmC,IAAlCN,EAAiC,uDAAzBJ,EAAcK,EAAW,uCACnD,OAAQA,EAAOC,MACX,IAAK,YACD,OAAO,2BACAF,GADP,IAEII,QAASH,EAAOE,QAChBE,UAAU,IAElB,IAAK,cACD,OAAO,2BACAL,GADP,IAEII,QAAS,OAEjB,QACI,OAAOJ,ICnBbJ,EAAe,CACjBW,YAAa,IAeFC,EAZY,WAAmC,IAAlCR,EAAiC,uDAAzBJ,EAAcK,EAAW,uCACzD,OAAQA,EAAOC,MACX,IAAK,mBACD,OAAO,2BACAF,GADP,IAEIO,YAAaN,EAAOE,UAE5B,QACI,OAAOH,ICHJS,EANKC,YAAgB,CAChCC,KAAMZ,EACNa,MAAON,EACPC,YAAaC,ICGFK,EATH,WACR,OACI,4BACI,oCACA,yC,wBCIGC,EARM,SAACC,GACdA,EACAC,IAAMC,SAASC,QAAQC,OAAvB,cAAiDJ,SAE1CC,IAAMC,SAASC,QAAQC,OAAvB,e,kBCuCFC,EAAiB,SAACtB,GAC3B,MAAO,CACHI,KAAM,mBACNC,QAASL,IAwBJuB,EAAiB,SAAAC,GAE1B,MAAO,CACHpB,KAAM,mBACNC,QAASmB,ICwBFC,eAPS,SAACvB,GAErB,MAAO,CACHW,KAAMX,EAAMW,KACZC,MAAOZ,EAAMY,MAAMR,WAGZmB,CAAyBC,aA7FzB,SAACC,GAAU,MAEEC,mBAAS,IAFX,mBAEfC,EAFe,KAETC,EAFS,OAGIF,mBAAS,IAHb,mBAGfG,EAHe,KAGRC,EAHQ,OAIUJ,mBAAS,IAJnB,mBAIfK,EAJe,KAILC,EAJK,OAKwBN,mBAAS,IALjC,mBAKfO,EALe,KAKEC,EALF,OAMIR,mBAAS,IANb,mBAMfd,EANe,KAMRuB,EANQ,KAShBC,EAAU,CACZT,KAAKA,EACLE,MAAMA,EACNE,SAASA,EACTE,gBAAgBA,GAGpBI,qBAAU,WACNC,MACD,CAACb,EAAMb,QAEV,IAAM0B,EAAkB,WACD,OAAhBb,EAAMb,OACTuB,EAASV,EAAMb,MAAM2B,SAYzB,OACI,6BACI,kBAAC,IAAD,CAAMC,GAAG,KAAT,gBACA,6CACA,wDAA6B,kBAAC,IAAD,CAAMA,GAAG,UAAT,WAC7B,6BACC5B,EAAM6B,OAAS,EAAG,4BAAK7B,EAAM8B,KAAI,SAACC,EAAIC,GAAL,OAAe,wBAAIC,IAAKD,GAAQD,EAAIG,SAAmB,KACzF,6BACI,0BAAM7C,OAAO,GAAG8C,SAdN,SAACC,GD9BD,IAACC,EAAUC,EC+B7BF,EAAEG,iBACF1B,EAAM2B,UDhCaH,ECgCOb,EDhCGc,ECgCMzB,EAAMyB,QDhCA,SAACE,GAC9CpC,IAAMqC,KAAK,UAAWJ,GACjBK,MAAK,SAAAhC,GACF4B,EAAQK,KAAK,UACbC,QAAQC,IAAInC,MAEfoC,OAAM,SAAAf,GAEHS,EAAS,CACLlD,KAAM,YACNC,QAASwC,EAAIgB,SAASC,OAE1BR,EAAS,CACLlD,KAAM,wBCgCF,6BACI,2BAAO2D,QAAQ,QAAf,QACA,2BACI3D,KAAK,OACL4D,GAAG,OACHC,MAAOpC,EACPqC,SAAU,SAAAhB,GAAC,OAAIpB,EAAQoB,EAAEiB,OAAOF,WAGxC,6BACI,2BAAOF,QAAQ,SAAf,SACA,2BACI3D,KAAK,QACL4D,GAAG,QACHC,MAAOlC,EACPmC,SAAU,SAAAhB,GAAC,OAAIlB,EAASkB,EAAEiB,OAAOF,WAGzC,6BACI,2BAAOF,QAAQ,YAAf,YACA,2BACI3D,KAAK,WACL4D,GAAG,WACHC,MAAOhC,EACPiC,SAAU,SAAAhB,GAAC,OAAIhB,EAAYgB,EAAEiB,OAAOF,WAG5C,6BACI,2BAAOF,QAAQ,mBAAf,oBACA,2BACI3D,KAAK,WACL4D,GAAG,kBACHC,MAAO9B,EACP+B,SAAU,SAAAhB,GAAC,OAAId,EAAmBc,EAAEiB,OAAOF,WAGnD,4BAAQ7D,KAAK,UAAb,kBC5DLqB,eANS,SAACvB,GACrB,MAAO,CACHW,KAAMX,EAAMW,QAILY,CAAyBC,aArBtB,SAACC,GAMf,OACI,6BACI,0CAAgBA,EAAMd,KAAKb,KAAKoE,UAChC,gFACA,4BAAQC,QARM,WF6CA,IAACjB,EE5CnBzB,EAAM2B,UF4CaF,EE5COzB,EAAMyB,QF4CD,SAACE,GACpCgB,aAAaC,WAAW,YACxBvD,GAAa,GACbsC,EAAShC,EAAe,KACxB8B,EAAQK,KAAK,UEzCL,eCqEGhC,eATS,SAACvB,GAErB,OADAwD,QAAQC,IAAI,QAASzD,GACd,CACHW,KAAMX,EAAMW,KACZC,MAAOZ,EAAMY,MAAMR,WAKZmB,CAAyBC,aAzE1B,SAACC,GAAW,IAAD,EACKC,mBAAS,IADd,mBACdG,EADc,KACPC,EADO,OAEWJ,mBAAS,IAFpB,mBAEdK,EAFc,KAEJC,EAFI,OAGKN,mBAAS,IAHd,mBAGdd,EAHc,KAGPuB,EAHO,KAKfmC,EAAc,CAChBzC,MAAOA,EACPE,SAAUA,GAIdM,qBAAU,WACNC,MACD,CAACb,EAAMb,QAEV,IAAM0B,EAAkB,WACD,OAAhBb,EAAMb,OACTuB,EAASV,EAAMb,MAAM2B,SAIzBiB,QAAQC,IAAI,QAAS7C,GAOrB,OACI,6BACI,kBAAC,IAAD,CAAM4B,GAAG,KAAT,gBACA,4CACA,sDAA2B,kBAAC,IAAD,CAAMA,GAAG,WAAT,YAC3B,6BACA,6BACC5B,EAAM6B,OAAS,EAAG,4BAAK7B,EAAM8B,KAAI,SAACC,EAAIC,GAAL,OAAe,wBAAIC,IAAKD,GAAQD,EAAIG,SAAmB,KACzF,6BACI,0BAAM7C,OAAO,GAAG8C,SAdD,SAACC,GACxBA,EAAEG,iBACF1B,EAAM2B,SHbW,SAACkB,EAAapB,GAAd,OAA0B,SAACE,GAChDpC,IAAMqC,KAAK,SAAUiB,GAChBhB,MAAK,SAAAhC,GAAW,IACLP,EAAUO,EAAOsC,KAAjB7C,MACRqD,aAAaG,QAAQ,WAAYxD,GACjCD,EAAaC,GAEbqC,EAAShC,EAAeoD,IAAIC,OAAO1D,KACnCmC,EAAQK,KAAK,iBAEhBG,OAAM,SAAAf,GAEHS,EAAS,CACLlD,KAAM,YACNC,QAASwC,EAAIgB,SAASC,OAE1BR,EAAS,CACLlD,KAAM,oBGJCwE,CAAUJ,EAAa7C,EAAMyB,YAahC,6BACI,2BAAOW,QAAQ,SAAf,SACA,2BACI3D,KAAK,QACL4D,GAAG,QACHC,MAAOlC,EACPmC,SAAU,SAAAhB,GAAC,OAAIlB,EAASkB,EAAEiB,OAAOF,WAGzC,6BACI,2BAAOF,QAAQ,YAAf,YACA,2BACI3D,KAAK,WACL4D,GAAG,WACHC,MAAOhC,EACPiC,SAAU,SAAAhB,GAAC,OAAIhB,EAAYgB,EAAEiB,OAAOF,WAG5C,4BAAQ7D,KAAK,UAAb,YAGR,uBAAGyE,KAAK,iBAAR,wBClCGC,EA/BO,SAACnD,GACnB+B,QAAQC,IAAI,QAAShC,GADQ,MAEaC,mBAAS,IAFtB,mBAEtBmD,EAFsB,KAEPC,EAFO,KAc7B,OAVAzC,qBAAU,WACNrB,IAAM+D,IAAI,0BAA2BtD,EAAMuD,MAAMC,OAAOC,QAAQ5B,MAAK,SAAA6B,GACjE3B,QAAQC,IAAI,UAAU0B,GACtBL,EAAiBK,EAAQvB,SAC1BF,OAAM,SAAAf,GACLa,QAAQC,IAAId,QAElB,IAEFa,QAAQC,IAAI,gBAAiBoB,GAEzB,oCACI,kBAAC,IAAD,CAAMrC,GAAG,KAAT,QACA,6BACKqC,EAAcnC,KAAI,SAAA0C,GAAI,OACnB,wBAAIvC,IAAKuC,EAAKC,KACV,yBAAKC,IAAKF,EAAKG,MAAOC,MAAO,CAACC,OAAQ,QAASC,MAAM,UACrD,4BAAKN,EAAKzD,MACV,iCAAOyD,EAAKO,OACZ,sD,kDC+HTC,EAnJI,WAAO,IAAD,EACGlE,oBAAS,GADZ,mBACdmE,EADc,KACRC,EADQ,KAEfC,EAAc,kBAAMD,GAAQ,IAFb,EAKmBpE,oBAAS,GAL5B,mBAKdsE,EALc,KAOfC,GAPe,KAOA,SAACjD,GAAO,IAAD,cACNA,EAAEiB,OAAOF,MADH,GACvBf,EAAEiB,OAAOtC,KADc,KAExB6B,QAAQC,IAAIT,EAAEiB,OAAOF,OACrBP,QAAQC,IAAIT,EAAEiB,UAUlB,OACI,6BACI,kBAAC,IAAD,CAAiBiC,KAAK,SAAS/B,QAnBpB,kBAAM2B,GAAQ,MAoBzB,kBAACK,EAAA,EAAD,CAAON,KAAMA,EAAMO,OAAQL,EAAaM,UAAWC,IAAQH,OACvD,kBAACA,EAAA,EAAMI,OAAP,CAAcF,UAAWC,IAAQC,QAC7B,kBAACJ,EAAA,EAAMK,MAAP,CAAaH,UAAWC,IAAQE,OAAhC,iBACA,kBAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYvC,QAAS4B,EAAaM,UAAWC,IAAQG,QAArE,MAEJ,kBAACN,EAAA,EAAMQ,KAAP,CAAYN,UAAWC,IAAQK,MAC3B,yBAAKN,UAAWC,IAAQM,WACpB,wBAAIP,UAAWC,IAAQO,MACnB,gCAAQ,0CACR,wBAAIR,UAAWC,IAAQQ,UACnB,2BACI5G,KAAK,WACL6D,MAAM,MACNpC,KAAK,MACLoF,QAASf,EACThC,SAAUiC,IAEd,2BAAOpC,QAAQ,GAAGwC,UAAWC,IAAQU,OAArC,QAEJ,wBAAIX,UAAWC,IAAQQ,UACnB,2BACI5G,KAAK,WACL6D,MAAM,OACNpC,KAAK,OACLoF,QAASf,EACThC,SAAUiC,IAEd,2BAAOpC,QAAQ,GAAGwC,UAAWC,IAAQU,OAArC,UAGR,wBAAIX,UAAWC,IAAQO,MACnB,gCAAQ,wCACR,wBAAIR,UAAWC,IAAQQ,UACnB,2BAAO5G,KAAK,aACZ,2BAAO2D,QAAQ,GAAGwC,UAAWC,IAAQU,OAArC,YAEJ,wBAAIX,UAAWC,IAAQQ,UACnB,2BAAO5G,KAAK,aACZ,2BAAO2D,QAAQ,GAAGwC,UAAWC,IAAQU,OAArC,cAEJ,wBAAIX,UAAWC,IAAQQ,UACnB,2BAAO5G,KAAK,aACZ,2BAAO2D,QAAQ,GAAGwC,UAAWC,IAAQU,OAArC,cAEJ,wBAAIX,UAAWC,IAAQQ,UACnB,2BAAO5G,KAAK,aACZ,2BAAO2D,QAAQ,GAAGwC,UAAWC,IAAQU,OAArC,YAEJ,wBAAIX,UAAWC,IAAQQ,UACnB,2BAAO5G,KAAK,aACZ,2BAAO2D,QAAQ,GAAGwC,UAAWC,IAAQU,OAArC,YAEJ,wBAAIX,UAAWC,IAAQQ,UACnB,2BAAO5G,KAAK,aACZ,2BAAO2D,QAAQ,GAAGwC,UAAWC,IAAQU,OAArC,aAEJ,wBAAIX,UAAWC,IAAQQ,UACnB,2BAAO5G,KAAK,aACZ,2BAAO2D,QAAQ,GAAGwC,UAAWC,IAAQU,OAArC,OAEJ,wBAAIX,UAAWC,IAAQQ,UACnB,2BAAO5G,KAAK,aACZ,2BAAO2D,QAAQ,GAAGwC,UAAWC,IAAQU,OAArC,OAEJ,wBAAIX,UAAWC,IAAQQ,UACnB,2BAAO5G,KAAK,aACZ,2BAAO2D,QAAQ,GAAGwC,UAAWC,IAAQU,OAArC,OAEJ,wBAAIX,UAAWC,IAAQQ,UACnB,2BAAO5G,KAAK,aACZ,2BAAO2D,QAAQ,GAAGwC,UAAWC,IAAQU,OAArC,QAGR,wBAAIX,UAAWC,IAAQO,MACnB,gCAAQ,4CACR,wBAAIR,UAAWC,IAAQQ,UACnB,2BAAO5G,KAAK,aACZ,2BAAO2D,QAAQ,GAAGwC,UAAWC,IAAQU,OAArC,WAEJ,wBAAIX,UAAWC,IAAQQ,UACnB,2BAAO5G,KAAK,aACZ,2BAAO2D,QAAQ,GAAGwC,UAAWC,IAAQU,OAArC,SAEJ,wBAAIX,UAAWC,IAAQQ,UACnB,2BAAO5G,KAAK,aACZ,2BAAO2D,QAAQ,GAAGwC,UAAWC,IAAQU,OAArC,UAEJ,wBAAIX,UAAWC,IAAQQ,UACnB,2BAAO5G,KAAK,aACZ,2BAAO2D,QAAQ,GAAGwC,UAAWC,IAAQU,OAArC,YAEJ,wBAAIX,UAAWC,IAAQQ,UACnB,2BAAO5G,KAAK,aACZ,2BAAO2D,QAAQ,GAAGwC,UAAWC,IAAQU,OAArC,WAEJ,wBAAIX,UAAWC,IAAQQ,UACnB,2BAAO5G,KAAK,aACZ,2BAAO2D,QAAQ,GAAGwC,UAAWC,IAAQU,OAArC,YAEJ,wBAAIX,UAAWC,IAAQQ,UACnB,2BAAO5G,KAAK,aACZ,2BAAO2D,QAAQ,GAAGwC,UAAWC,IAAQU,OAArC,UAEJ,wBAAIX,UAAWC,IAAQQ,UACnB,2BAAO5G,KAAK,aACZ,2BAAO2D,QAAQ,GAAGwC,UAAWC,IAAQU,OAArC,WAEJ,wBAAIX,UAAWC,IAAQQ,UACnB,2BAAO5G,KAAK,aACZ,2BAAO2D,QAAQ,GAAGwC,UAAWC,IAAQU,OAArC,eAKhB,kBAACb,EAAA,EAAMc,OAAP,KACI,kBAACR,EAAA,EAAD,CAAQJ,UAAWC,IAAQY,YAAanE,SA7H5B,WACxB/B,IAAMqC,KAAK,yBAAyBC,MAAK,SAAAhC,GACrCkC,QAAQC,IAAInC,MACboC,OAAM,SAAAf,GACLa,QAAQC,IAAId,QAyHJ,aC1GLwE,EA/BE,WAAO,IAAD,EACazF,mBAAS,IADtB,mBACZ0F,EADY,KACFC,EADE,KAanB,OAVAhF,qBAAU,WACNrB,IAAM+D,IAAI,0BACLzB,MAAK,SAAA8D,GAEFC,EAAYD,EAASxD,SACtBF,OAAM,SAAAf,GACLa,QAAQC,IAAId,QAErB,IAGC,oCACI,kBAAC,EAAD,MACA,6BACKyE,EAAS1E,KAAI,SAAAyC,GAAO,OACjB,kBAAC,IAAD,CAAM3C,GAAI,IAAM2C,EAAQE,IAAKxC,IAAKsC,EAAQE,KACtC,4BACI,yBAAKC,IAAKH,EAAQI,MAAO+B,IAAI,GAAG9B,MAAO,CAACC,OAAQ,QAASC,MAAM,UAC/D,4BAAKP,EAAQxD,MACb,iCAAOwD,EAAQQ,eCR5B4B,EAfF,WACT,OACI,6BAGI,kBAAC,IAAD,CAAM/E,GAAG,WAAW,4CACpB,kBAAC,IAAD,CAAMA,GAAG,UAAU,2CACnB,kBAAC,EAAD,QC0BGjB,eARS,SAACvB,GAErB,MAAO,CACHW,KAAMX,EAAMW,KACZC,MAAOZ,EAAMY,MAAMR,WAIZmB,EApCM,SAACE,GAClB+B,QAAQC,IAAI,QAAShC,GACrB,IAAO5B,EAAkB4B,EAAMd,KAAKd,gBAGpC,OAFA2D,QAAQC,IAAI,kBAAmB5D,GAG3B,kBAAC,IAAD,iBACQ4B,EAAM+F,KADd,CAEIC,OAAQ,SAAAhG,GACJ,OAAuB,IAApB5B,EACQ,kBAAC,EAAc4B,GAGlB,kBAAC,IAAD,CACIe,GAAK,CACDkF,KAAM,SACN1H,MAAO,CACH2H,KAAMlG,EAAMmG,oBCgDjCrG,eATS,SAACvB,GAErB,OADAwD,QAAQC,IAAI,QAASzD,GACd,CACHW,KAAMX,EAAMW,KACZC,MAAOZ,EAAMY,MACbL,YAAaP,EAAMO,YAAYA,eAIxBgB,EAjEM,SAACE,GAAW,IAAD,EACFC,mBAAS,IADP,mBACrBG,EADqB,KACdC,EADc,OAEFJ,mBAAS,IAFP,mBAErBd,EAFqB,KAEduB,EAFc,KAItB0F,EAAgB,CAClBhG,MAAOA,GAGXQ,qBAAU,WACNC,MACD,CAACb,EAAMb,MAAMR,UAEhB,IAAMkC,EAAkB,WACD,OAAhBb,EAAMb,OACTuB,EAASV,EAAMb,QAInB4C,QAAQC,IAAI,QAAS7C,GASrB,OACI,6BACA,kBAAC,IAAD,CAAM4B,GAAG,KAAT,iBAE0B,IAAzBf,EAAMb,MAAMP,UACT,6BACI,2BAAIO,EAAMR,UAGK,gBAAtBqB,EAAMlB,aACH,6BACI,0EAGR,qEACI,0BAAMN,OAAO,GAAG8C,SAtBI,SAACC,GACzBA,EAAEG,iBACF1B,EAAM2B,STqDkB,SAACvB,GAAD,OAAW,SAACuB,GACxCpC,IAAMqC,KAAK,gBAAiBxB,GACvByB,MAAK,SAAAhC,GACFkC,QAAQC,IAAI,SAAUnC,GACtB8B,EAAS/B,EAAeC,EAAOsC,UAElCF,OAAM,SAAAf,GACHa,QAAQC,IAAI,MAAOd,GACnBS,EAAS,CACLlD,KAAM,YACNC,QAASwC,EAAIgB,SAASC,WS/DfkE,CAAiBD,IAChC/F,EAAS,MAoBD,2BAAO+B,QAAQ,SAAf,SACA,2BACI3D,KAAK,QACL4D,GAAG,QACHC,MAAOlC,EACPmC,SAAU,SAAAhB,GAAC,OAAIlB,EAASkB,EAAEiB,OAAOF,UAErC,4BAAQ7D,KAAK,UAAb,eCqBDqB,eARS,SAACvB,GACrB,MAAO,CACHW,KAAMX,EAAMW,KACZC,MAAOZ,EAAMY,MAAMR,QACnBG,YAAaP,EAAMO,YAAYA,eAIxBgB,CAAyBC,aAtElB,SAACC,GAAW,IAAD,EACGC,mBAAS,IADZ,mBACtBK,EADsB,KACZC,EADY,OAEiBN,mBAAS,IAF1B,mBAEtBO,EAFsB,KAELC,EAFK,OAGHR,mBAAS,IAHN,mBAGtBd,EAHsB,KAGfuB,EAHe,KAIvBpB,EAAQU,EAAMuD,MAAMC,OAAOlE,MAEjCsB,qBAAU,WACNC,MACD,CAACb,EAAMb,QAEV,IAAM0B,EAAkB,WACD,OAAhBb,EAAMb,OACTuB,EAASV,EAAMb,MAAM2B,SAIzBiB,QAAQC,IAAI,QAAS7C,GAkBrB,OACI,6BACCA,EAAM6B,OAAS,EAAG,4BAAK7B,EAAM8B,KAAI,SAACC,EAAIC,GAAL,OAAe,wBAAIC,IAAKD,GAAQD,EAAIG,SAAmB,KACrF,0BAAM7C,OAAO,GAAG8C,SAnBK,SAACC,GVuEL,IAAC+E,EAAkB7E,EUtExCF,EAAEG,iBACF1B,EAAM2B,UVqEgB2E,EUrEO,CAAChG,SAAUA,EAAUE,gBAAiBA,EAAiB+F,cAAejH,GVqE3DmC,EUrEkEzB,EAAMyB,QVqE5D,SAACE,GACzDpC,IAAMqC,KAAK,kBAAmB0E,GACzBzE,MAAK,SAAAhC,GACFkC,QAAQC,IAAI,SAAUnC,GACtB8B,EAAS/B,EAAeC,EAAOsC,OAC/BV,EAAQK,KAAK,aAEhBG,OAAM,SAAAf,GACHa,QAAQC,IAAI,MAAOd,GACnBS,EAAS,CACLlD,KAAM,YACNC,QAASwC,EAAIgB,SAASC,eU9DtB,6BACI,2BAAOC,QAAQ,YAAf,YACA,2BACI3D,KAAK,WACL4D,GAAG,WACHC,MAAOhC,EACPiC,SAAU,SAAAhB,GAAC,OAAIhB,EAAYgB,EAAEiB,OAAOF,WAG5C,6BACI,2BAAOF,QAAQ,mBAAf,oBACA,2BACI3D,KAAK,WACL4D,GAAG,kBACHC,MAAO9B,EACP+B,SAAU,SAAAhB,GAAC,OAAId,EAAmBc,EAAEiB,OAAOF,WAGnD,4BAAQ7D,KAAK,UAAb,gB,eC3ChB+H,EAAQC,IAAIC,KAEZ,IAAMC,EAAQC,YAAY5H,EAAa6H,YACrCC,YAAgBC,KAChBC,OAAOC,8BAAgCD,OAAOC,iCAyBjCC,MAtBf,WACE,OACE,kBAAC,IAAD,CAAUP,MAAOA,GACf,kBAAC,IAAD,KACE,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOV,KAAK,UAAUkB,UAAWC,IACjC,kBAAC,IAAD,CAAOnB,KAAK,SAASkB,UAAWE,IAChC,kBAAC,EAAD,CAAeC,OAAK,EAACrB,KAAK,aAAakB,UAAWI,IAClD,kBAAC,IAAD,CAAOtB,KAAK,IAAIqB,OAAK,EAACH,UAAWrB,IAEjC,kBAAC,IAAD,CAAOG,KAAK,gBAAgBkB,UAAWK,IACvC,kBAAC,IAAD,CAAOvB,KAAK,gBAAgBkB,UAAWM,IACvC,kBAAC,IAAD,CAAOxB,KAAK,WAAWkB,UAAWhE,SC5B1BuE,QACW,cAA7BV,OAAOb,SAASwB,UAEe,UAA7BX,OAAOb,SAASwB,UAEhBX,OAAOb,SAASwB,SAASpE,MACvB,2DCXNqE,IAAS5B,OACL,kBAAC,EAAD,MACF6B,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpG,MAAK,SAAAqG,GACJA,EAAaC,gBAEdlG,OAAM,SAAA9C,GACL4C,QAAQ5C,MAAMA,EAAMR,c","file":"static/js/main.6f1325f0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"FilterSort_Modal__1vRiU\",\"Header\":\"FilterSort_Header__1UbEN\",\"Title\":\"FilterSort_Title__1Q5al\",\"Button\":\"FilterSort_Button__1ctFP\",\"ApplyButton\":\"FilterSort_ApplyButton__8q4xl\",\"List\":\"FilterSort_List__3mR28\",\"ListItem\":\"FilterSort_ListItem__2q2KN\",\"Label\":\"FilterSort_Label__3WxGa\"};","import * as actionTypes from '../action/type';\nconst isEmpty = require('is-empty');\n\nconst initialState = {\n    isAuthenticated: false,\n    user: {}\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            }\n        case actionTypes.RETRIEVE_PASSWORD:\n            return {\n                ...state,\n                isAuthenticated: false,\n                user: action.payload\n            }\n        case actionTypes.RESET_PASSWORD:\n            return {\n                ...state,\n                isAuthenticated: false,\n                user: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n\nexport default authReducer;","export const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const IS_LOADING = 'IS_LOADING';\nexport const GET_ERROR = 'GET_ERROR';\nexport const CLEAR_ERROR = 'CLEAR_ERROR';\nexport const RETRIEVE_PASSWORD = 'RETRIEVE_PASSWORD';\nexport const RESET_PASSWORD = 'RESET_PASSWORD'\nexport const SET_FINDPASSWORD_USER = 'SET_FINDPASSWORD_USER';\nexport const GET_BACKEND_DATA = 'GET_BACKEND_DATA';\n","import { GET_ERROR, CLEAR_ERROR } from '../action/type';\n\nconst initialState = {\n    message: null,\n    hasError: false\n};\n\nconst errorReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'GET_ERROR':\n            return {\n                ...state,\n                message: action.payload,\n                hasError: true\n            }\n        case 'CLEAR_ERROR':\n            return {\n                ...state,\n                message: null\n            }\n        default:\n            return state\n    }\n}\n\n\nexport default errorReducer;","import { GET_BACKEND_DATA } from '../action/type';\n\nconst initialState = {\n    backendData: ''\n}\n\nconst backendDataReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'GET_BACKEND_DATA':\n            return {\n                ...state,\n                backendData: action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default backendDataReducer;","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport errorReducer from './errorReducer';\nimport backendDataReducer from './backendDataReducer';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    error: errorReducer,\n    backendData: backendDataReducer\n});\n\nexport default rootReducer;","import React from 'react'\n\nconst Nav = () => {\n    return (\n        <ul>\n            <li>Shop</li>\n            <li>Contact</li>\n        </ul>\n    )\n};\n\nexport default Nav;\n","import axios from 'axios';\n\nconst setAuthToken = (token) => {\n    if (token) {\n        axios.defaults.headers.common[\"Authorization\"] = token;\n    } else {\n        delete axios.defaults.headers.common['Authorization']\n    }\n};\n\nexport default setAuthToken;","import axios from 'axios';\nimport setAuthToken from '../middleware/middleware';\nimport jwt from 'jsonwebtoken';\nimport { SET_CURRENT_USER, GET_ERROR, CLEAR_ERROR, RETRIEVE_PASSWORD, GET_BACKEND_DATA } from './type';\n\nexport const signupUser = (userInfo, history) => (dispatch) => {\n    axios.post('/signup', userInfo)\n        .then(result => {\n            history.push('/login')\n            console.log(result)\n        })\n        .catch(err => {\n            // console.log(err)\n            dispatch({\n                type: 'GET_ERROR',\n                payload: err.response.data\n            })\n            dispatch({\n                type: 'CLEAR_ERROR'\n            })\n        })\n}\n\nexport const loginUser = (currentUser, history) => (dispatch) => {\n    axios.post('/login', currentUser)\n        .then(result => {\n            const { token } = result.data;\n            localStorage.setItem('jwtToken', token)\n            setAuthToken(token)\n                // console.log('result', result);\n            dispatch(setCurrentUser(jwt.decode(token)))\n            history.push('/dashboard')\n        })\n        .catch(err => {\n            // console.log(err)\n            dispatch({\n                type: 'GET_ERROR',\n                payload: err.response.data\n            })\n            dispatch({\n                type: 'CLEAR_ERROR'\n            })\n        })\n}\n\nexport const setCurrentUser = (user) => {\n    return {\n        type: 'SET_CURRENT_USER',\n        payload: user\n    }\n}\n\nexport const logoutUser = (history) => (dispatch) => {\n    localStorage.removeItem('jwtToken');\n    setAuthToken(false);\n    dispatch(setCurrentUser({}))\n    history.push('/')\n}\n\nexport const getErrorMessage = (error) => {\n    return {\n        type: 'GET_ERROR',\n        payload: error\n    }\n}\n\nexport const clearError = () => {\n    return {\n        type: 'CLEAR_ERROR'\n    }\n}\n\nexport const getBackendData = result => {\n    // console.log('result', result)\n    return {\n        type: 'GET_BACKEND_DATA',\n        payload: result\n    }\n}\n\nexport const retrievePassword = (email) => (dispatch) => {\n    axios.post('/findpassword', email)\n        .then(result => {\n            console.log('result', result)\n            dispatch(getBackendData(result.data))\n        })\n        .catch(err => {\n            console.log('err', err)\n            dispatch({\n                type: 'GET_ERROR',\n                payload: err.response.data\n            })\n        })\n}\n\nexport const resetPassword = (verifiedPassword, history) => (dispatch) => {\n    axios.post('/updatepassword', verifiedPassword)\n        .then(result => {\n            console.log('result', result)\n            dispatch(getBackendData(result.data))\n            history.push('/login')\n        })\n        .catch(err => {\n            console.log('err', err)\n            dispatch({\n                type: 'GET_ERROR',\n                payload: err.response.data\n            })\n        })\n}","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport { signupUser,getErrorMessage } from '../../action/action';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router';\nimport { Link } from 'react-router-dom';\n\nconst Signup = (props) => {\n    // console.log('props', props)\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [error, setError] = useState({})\n\n\n    const newUser = {\n        name:name,\n        email:email,\n        password:password,\n        confirmPassword:confirmPassword\n    }\n\n    useEffect(() => {\n        getErrorMessage()\n    }, [props.error])\n\n    const getErrorMessage = () => {\n        if(props.error !== null) {\n        setError(props.error.errors)\n        }\n    }\n\n    // console.log('error', error)\n        \n    const submitHandler = (e) => {\n        e.preventDefault();\n        props.dispatch(signupUser(newUser, props.history))\n    }\n\n\n    return (\n        <div>\n            <Link to='/' >BACK TO HOME</Link>\n            <h3>Sign up below</h3>\n            <h5>Already have an account? <Link to='/login'>Log in</Link></h5>\n            <br/>\n            {error.length > 0? <ul>{error.map((err,index) => <li key={index}>{err.msg}</li>)}</ul> : null}\n            <div>\n                <form action=\"\" onSubmit={submitHandler}>\n                    <div>\n                        <label htmlFor=\"name\">Name</label>\n                        <input \n                            type=\"text\"\n                            id=\"name\"\n                            value={name}\n                            onChange={e => setName(e.target.value)}\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor=\"email\">Email</label>\n                        <input \n                            type=\"email\"\n                            id=\"email\"\n                            value={email}\n                            onChange={e => setEmail(e.target.value)}\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor=\"password\">Password</label>\n                        <input \n                            type=\"password\"\n                            id=\"password\"\n                            value={password}\n                            onChange={e => setPassword(e.target.value)}\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                        <input \n                            type=\"password\"\n                            id=\"confirmPassword\"\n                            value={confirmPassword}\n                            onChange={e => setConfirmPassword(e.target.value)}\n                        />\n                    </div>\n                    <button type=\"submit\">SIGN UP</button>\n                </form>\n            </div>\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => {\n    // console.log('state', state)\n    return {\n        auth: state.auth,\n        error: state.error.message\n    }\n}\nexport default connect(mapStateToProps)(withRouter(Signup));\n\n\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router';\nimport {logoutUser} from '../../action/action';\n\nconst Dashboard = (props) => {\n\n    const logoutHandler = () => {\n        props.dispatch(logoutUser(props.history))\n    }\n\n    return (\n        <div>\n            <h3>Hey there, {props.auth.user.userName}</h3>\n            <h5>You are logged in a full-stack MERN application.</h5>\n            <button onClick={logoutHandler}>LOGOUT</button>\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.auth\n    }\n}\n\nexport default connect(mapStateToProps)(withRouter(Dashboard));\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport setAuthToken from '../../middleware/middleware';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router';\nimport { loginUser} from '../../action/action';\nimport Dashboard from '../dashboard/Dashboard';\nimport {SET_CURRENT_USER} from '../../action/type';\n\n\nconst Login = (props) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState({});\n\n    const currentUser = {\n        email: email,\n        password: password\n    }\n\n\n    useEffect(() => {\n        getErrorMessage()\n    }, [props.error])\n\n    const getErrorMessage = () => {\n        if(props.error !== null) {\n        setError(props.error.errors);\n        }\n    }\n\n    console.log('error', error)\n\n    const loginSubmitHandler = (e) => {\n        e.preventDefault();\n        props.dispatch(loginUser(currentUser, props.history));\n    }\n\n    return (\n        <div>\n            <Link to='/' >BACK TO HOME</Link>\n            <h3>Log in below</h3>\n            <h5>Don't have an account? <Link to='/signup'>Sign up</Link></h5>\n            <br/>\n            <br/>\n            {error.length > 0? <ul>{error.map((err,index) => <li key={index}>{err.msg}</li>)}</ul> : null}\n            <div>\n                <form action=\"\" onSubmit={loginSubmitHandler}>\n                    <div>\n                        <label htmlFor=\"email\">Email</label>\n                        <input \n                            type=\"email\"\n                            id=\"email\"\n                            value={email}\n                            onChange={e => setEmail(e.target.value)}\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor=\"password\">Password</label>\n                        <input \n                            type=\"password\"\n                            id=\"password\"\n                            value={password}\n                            onChange={e => setPassword(e.target.value)}\n                        />\n                    </div>\n                    <button type=\"submit\">LOG IN</button>\n                </form>\n            </div>\n            <a href=\"/findpassword\">Forget Password</a>\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => {\n    console.log('state', state)\n    return {\n        auth: state.auth,\n        error: state.error.message\n    }\n}\n\n\nexport default connect(mapStateToProps)(withRouter(Login));\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n// import {withRouter} from 'react-router';\nimport {Link} from 'react-router-dom';\n\nconst ProductDetail = (props) => {\n    console.log('props', props)\n    const [productDetail, setProductDetail] = useState([])\n\n    useEffect(() => {\n        axios.get('/products/productslist/'+ props.match.params.prodId).then(product => {\n            console.log('product',product)\n            setProductDetail(product.data)\n        }).catch(err => {\n            console.log(err)\n        })\n    },[])\n\n    console.log('productDetail', productDetail)\n    return (\n        <>\n            <Link to='/' >BACK</Link>\n            <div>\n                {productDetail.map(prod => (\n                    <ul key={prod._id}>\n                        <img src={prod.image} style={{height: '200px', width:'auto'}}/>\n                        <li>{prod.name}</li>\n                        <li>$ {prod.price}</li>\n                        <button>Add to cart</button>\n                    </ul>\n                ))}\n            </div>\n        </>\n    )\n};\n\nexport default ProductDetail;\n","import React, {useState, useEffect} from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classes from './FilterSort.module.css';\nimport axios from 'axios';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nconst FilterSort = () => {\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [selectGender, setSelectGender] = useState(false)\n\n    const checkHandler = (e) => {\n        [e.target.name] = e.target.value\n        console.log(e.target.value)\n        console.log(e.target)\n    }\n\n    const productResultHandler =() => {\n        axios.post('/products?gender=Girl').then(result => {\n            console.log(result)\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n    return (\n        <div>\n            <FontAwesomeIcon icon=\"filter\" onClick={handleShow}/>\n            <Modal show={show} onHide={handleClose} className={classes.Modal}>\n                <Modal.Header className={classes.Header}>\n                    <Modal.Title className={classes.Title}>Filter & Sort</Modal.Title>\n                    <Button variant=\"secondary\" onClick={handleClose} className={classes.Button}>X</Button>\n                </Modal.Header>\n                <Modal.Body className={classes.Body}>\n                    <div className={classes.container}>\n                        <ul className={classes.List}>\n                            <strong><span>Gender:</span></strong>\n                            <li className={classes.ListItem}>\n                                <input \n                                    type=\"checkbox\" \n                                    value=\"Boy\"\n                                    name=\"Boy\" \n                                    checked={selectGender}\n                                    onChange={checkHandler}\n                                />\n                                <label htmlFor=\"\" className={classes.Label}>Boy</label>\n                            </li>\n                            <li className={classes.ListItem}>\n                                <input \n                                    type=\"checkbox\" \n                                    value=\"Girl\" \n                                    name=\"Girl\"\n                                    checked={selectGender}\n                                    onChange={checkHandler}\n                                />\n                                <label htmlFor=\"\" className={classes.Label}>Girl</label>\n                            </li>\n                        </ul>\n                        <ul className={classes.List}>\n                            <strong><span>Size:</span></strong>\n                            <li className={classes.ListItem}>\n                                <input type=\"checkbox\"/>\n                                <label htmlFor=\"\" className={classes.Label}>3 month</label>\n                            </li>\n                            <li className={classes.ListItem}>\n                                <input type=\"checkbox\"/>\n                                <label htmlFor=\"\" className={classes.Label}>3-6 month</label>\n                            </li>\n                            <li className={classes.ListItem}>\n                                <input type=\"checkbox\"/>\n                                <label htmlFor=\"\" className={classes.Label}>6-9 month</label>\n                            </li>\n                            <li className={classes.ListItem}>\n                                <input type=\"checkbox\"/>\n                                <label htmlFor=\"\" className={classes.Label}>9 month</label>\n                            </li>\n                            <li className={classes.ListItem}>\n                                <input type=\"checkbox\"/>\n                                <label htmlFor=\"\" className={classes.Label}>12month</label>\n                            </li>\n                            <li className={classes.ListItem}>\n                                <input type=\"checkbox\"/>\n                                <label htmlFor=\"\" className={classes.Label}>18 month</label>\n                            </li>\n                            <li className={classes.ListItem}>\n                                <input type=\"checkbox\"/>\n                                <label htmlFor=\"\" className={classes.Label}>2T</label>\n                            </li>\n                            <li className={classes.ListItem}>\n                                <input type=\"checkbox\"/>\n                                <label htmlFor=\"\" className={classes.Label}>3T</label>\n                            </li>\n                            <li className={classes.ListItem}>\n                                <input type=\"checkbox\"/>\n                                <label htmlFor=\"\" className={classes.Label}>4T</label>\n                            </li>\n                            <li className={classes.ListItem}>\n                                <input type=\"checkbox\"/>\n                                <label htmlFor=\"\" className={classes.Label}>5T</label>\n                            </li>\n                        </ul>\n                        <ul className={classes.List}>\n                            <strong><span>Category:</span></strong>\n                            <li className={classes.ListItem}>\n                                <input type=\"checkbox\" />\n                                <label htmlFor=\"\" className={classes.Label}>shirts</label>\n                            </li>\n                            <li className={classes.ListItem}>\n                                <input type=\"checkbox\"/>\n                                <label htmlFor=\"\" className={classes.Label}>tops</label>\n                            </li>\n                            <li className={classes.ListItem}>\n                                <input type=\"checkbox\"/>\n                                <label htmlFor=\"\" className={classes.Label}>pants</label>\n                            </li>\n                            <li className={classes.ListItem}>\n                                <input type=\"checkbox\"/>\n                                <label htmlFor=\"\" className={classes.Label}>onesies</label>\n                            </li>\n                            <li className={classes.ListItem}>\n                                <input type=\"checkbox\"/>\n                                <label htmlFor=\"\" className={classes.Label}>shorts</label>\n                            </li>\n                            <li className={classes.ListItem}>\n                                <input type=\"checkbox\"/>\n                                <label htmlFor=\"\" className={classes.Label}>tshirts</label>\n                            </li>\n                            <li className={classes.ListItem}>\n                                <input type=\"checkbox\"/>\n                                <label htmlFor=\"\" className={classes.Label}>dress</label>\n                            </li>\n                            <li className={classes.ListItem}>\n                                <input type=\"checkbox\"/>\n                                <label htmlFor=\"\" className={classes.Label}>jacket</label>\n                            </li>\n                            <li className={classes.ListItem}>\n                                <input type=\"checkbox\"/>\n                                <label htmlFor=\"\" className={classes.Label}>sweater</label>\n                            </li>\n                        </ul>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button className={classes.ApplyButton} onSubmit={productResultHandler}>\n                        APPLY\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n};\n\nexport default FilterSort;\n\n","import React, {useState,useEffect} from 'react';\nimport axios from 'axios';\nimport ProductDetail from '../products/ProductDetail';\nimport {Link} from 'react-router-dom';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classes from '../products/Products.module.css';\nimport FilterSort from '../ui/FilterSort';\n\n\nconst Products = () => {\n    const [products, setProducts] = useState([]);\n\n    useEffect(() => {\n        axios.get('/products/productslist')\n            .then(products => {\n                // console.log(products)\n                setProducts(products.data)\n            }).catch(err => {\n                console.log(err)\n            })\n    }, [])\n\n    return (\n        <>\n            <FilterSort />\n            <div>\n                {products.map(product => (\n                    <Link to={'/' + product._id} key={product._id} >\n                        <ul>\n                            <img src={product.image} alt=\"\" style={{height: '200px', width:'auto'}}/>\n                            <li>{product.name}</li>\n                            <li>$ {product.price}</li>\n                        </ul>\n                    </Link>\n                ))}\n            </div>\n        </>\n    )\n};\n\nexport default Products;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Signup from '../signup/Signup';\nimport Login from '../login/Login';\nimport Products from '../products/Products';\nimport ProductDetail from '../products/ProductDetail';\n// import {Switch, Route} from 'react-router-dom';\n\nconst Main = () => {\n    return (\n        <div>\n            {/* <p><strong>Build</strong> a login/auth app with MERN STACK</p>\n            <h5>Create a minimal full-stack app with user authentication via JWT token</h5> */}\n            <Link to='/signup' ><button>SIGN UP</button></Link>\n            <Link to='/login' ><button>LOG IN</button></Link>\n            <Products/>\n            {/* <Switch>\n                <Route path='/:prodId' component={ProductDetail}/>\n            </Switch> */}\n        </div>\n    )\n};\n\nexport default Main;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Route, Redirect} from 'react-router-dom';\nimport Dashboard from './dashboard/Dashboard';\n\nconst PrivateRoute = (props) => {\n    console.log('props', props);\n    const  isAuthenticated = props.auth.isAuthenticated;\n    console.log('isAuthenticated', isAuthenticated);\n\n    return (\n        <Route \n            {...props.rest}\n            render={props => {\n                if(isAuthenticated === true) {\n                    return <Dashboard {...props}/>\n                } else {\n                    return (\n                        <Redirect \n                            to ={{\n                                path: '/login',\n                                state: {\n                                    from: props.location\n                                }\n                            }}\n                        />\n                    )\n                }\n            }}\n        />\n    )\n};\n\nconst mapStateToProps = (state) => {\n    // console.log('state', state)\n    return {\n        auth: state.auth,\n        error: state.error.message\n    }\n}\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, {useState, useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {retrievePassword} from '../../action/action';\nimport {Link} from 'react-router-dom';\n\nconst FindPassword = (props) => {\n    const [email, setEmail] = useState('');\n    const [error, setError] = useState({});\n\n    const verifiedEmail = {\n        email: email\n    }\n\n    useEffect(() => {\n        getErrorMessage()\n    }, [props.error.message])\n\n    const getErrorMessage = () => {\n        if(props.error !== null) {\n        setError(props.error);\n        }\n    }\n\n    console.log('error', error)\n\n    const findPasswordHandler = (e) => {\n        e.preventDefault();\n        props.dispatch(retrievePassword(verifiedEmail));\n        setEmail('')\n    }\n\n\n    return (\n        <div>\n        <Link to='/' >BACK TO HOME</Link>\n        {/* {error.message !== null ? <ul>{error.message}</ul> : null} */}\n        {props.error.hasError === true && (\n            <div>\n                <p>{error.message}</p>\n            </div>\n        )}\n        {props.backendData === 'Email sent!' && (\n            <div>\n                <p>Please check your email to reset password!</p>\n            </div>\n        )}\n        <p>Type your email to reset the password.</p>\n            <form action=\"\" onSubmit={findPasswordHandler}>\n                <label htmlFor=\"email\">Email</label>\n                <input \n                    type=\"email\"\n                    id=\"email\"\n                    value={email}\n                    onChange={e => setEmail(e.target.value)}\n                />\n                <button type=\"submit\">Submit</button>\n            </form>\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => {\n    console.log('state', state)\n    return {\n        auth: state.auth,\n        error: state.error,\n        backendData: state.backendData.backendData\n    }\n}\n\nexport default connect(mapStateToProps)(FindPassword);\n","import React, {useState, useEffect} from 'react';\nimport {withRouter} from 'react-router';\nimport {connect} from 'react-redux';\nimport {resetPassword} from '../../action/action';\nimport axios from 'axios';\n\nconst ResetPassword = (props) => {\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [error, setError] = useState({});\n    const token = props.match.params.token;\n\n    useEffect(() => {\n        getErrorMessage()\n    }, [props.error])\n\n    const getErrorMessage = () => {\n        if(props.error !== null) {\n        setError(props.error.errors);\n        }\n    }\n\n    console.log('error', error)\n    \n    const resetPasswordHandler = (e) => {\n        e.preventDefault();\n        props.dispatch(resetPassword({password: password, confirmPassword: confirmPassword, passwordToken: token},props.history))\n        // axios.post('/updatepassword', {\n        //     password:password,confirmPassword:confirmPassword,passwordToken:token\n        // }).then(result => {\n        //     console.log('result', result)\n        //     if(result.data.message === 'password updated') {\n        //         props.history.push('/login')\n        //     }\n        // }).catch(err => {\n        //     console.log(err)\n        // })\n    }\n\n\n    return (\n        <div>\n        {error.length > 0? <ul>{error.map((err,index) => <li key={index}>{err.msg}</li>)}</ul> : null}\n            <form action=\"\" onSubmit={resetPasswordHandler}>\n                <div>\n                    <label htmlFor=\"password\">Password</label>\n                    <input \n                        type=\"password\" \n                        id=\"password\"\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                    <input \n                        type=\"password\" \n                        id=\"confirmPassword\"\n                        value={confirmPassword}\n                        onChange={e => setConfirmPassword(e.target.value)}\n                    />\n                </div>\n                <button type=\"submit\">Submit</button>\n            </form>\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.auth,\n        error: state.error.message,\n        backendData: state.backendData.backendData\n    }\n}\n\nexport default connect(mapStateToProps)(withRouter(ResetPassword));\n","import React from 'react';\nimport './App.css';\nimport {Switch, BrowserRouter as Router, Route} from 'react-router-dom';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport {Provider} from 'react-redux';\nimport rootReducer from './reducer/index';\nimport Nav from './component/nav/Nav';\nimport Main from './component/main/Main';\nimport Signup from './component/signup/Signup';\nimport Login from './component/login/Login';\nimport Dashboard from './component/dashboard/Dashboard';\nimport PrivateRoute from './component/PrivateRoute';\nimport FindPassword from './component/findpassword/FindPassword';\nimport ResetPassword from './component/resetPassword/ResetPassword';\n// import Products from './component/products/Products';\nimport ProductDetail from './component/products/ProductDetail';\nimport {faFilter} from '@fortawesome/free-solid-svg-icons';\nimport{library} from '@fortawesome/fontawesome-svg-core';\nlibrary.add(faFilter);\n\nconst store = createStore(rootReducer, compose(\n  applyMiddleware(thunk),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n))\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div>\n          <Nav />\n          <Switch>\n            <Route path='/signup' component={Signup}/>\n            <Route path='/login' component={Login}/>\n            <PrivateRoute  exact path='/dashboard' component={Dashboard}/>\n            <Route path='/' exact component={Main}/>\n            {/* <Route path='/products' component={Products}/> */}\n            <Route path='/findpassword' component={FindPassword}/>\n            <Route path='/reset/:token' component={ResetPassword}/>\n            <Route path='/:prodId' component={ProductDetail}/>\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}